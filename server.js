// Generated by CoffeeScript 1.9.1
var Todo, app, bodyParser, coffeeDir, express, methodOverride, mongoose, morgan, publicDir, server;

express = require('express');

morgan = require('morgan');

app = express();

mongoose = require('mongoose');

bodyParser = require('body-parser');

methodOverride = require('method-override');

coffeeDir = __dirname + '/coffee';

publicDir = __dirname + '/public';

app.use(morgan('dev'));

mongoose.connect('mongodb://geekpradd:test123@ds055680.mongolab.com:55680/pradd');

app.use(express["static"](publicDir));

app.use(bodyParser.urlencoded({
  'extended': 'true'
}));

app.use(bodyParser.json());

app.use(bodyParser.json({
  type: 'application/vnd.api+json'
}));

app.use(methodOverride());

Todo = mongoose.model('Todo', {
  text: String
});

app.get('/api/todos', function(req, res) {
  return Todo.find(function(err, todos) {
    if (err) {
      res.send(err);
    }
    res.json(todos);
  });
});

app.post('/api/todos', function(req, res) {
  return Todo.create({
    text: req.body.text,
    done: false
  }, function(err, todo) {
    if (err) {
      res.send(err);
    }
    return Todo.find(function(err, todos) {
      if (err) {
        res.send(err);
      }
      res.json(todos);
    });
  });
});

app["delete"]('/api/todos/:id', function(req, res) {
  return Todo.remove({
    id: req.params.id
  }, function(err, todo) {
    if (err) {
      res.send(err);
    }
    return Todo.find(function(err, todos) {
      if (err) {
        res.send(err);
      }
      res.json(todos);
    });
  });
});

app.get('*', function(req, res) {
  return res.send("Hey douche");
});

server = app.listen(3000, function() {
  var host, port;
  host = server.address().address;
  port = server.address().port;
  return console.log("Server running at http://" + host + ":" + port);
});
